<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xinghunm</title>
  
  <subtitle>Change the world or change yourself</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-30T05:49:05.667Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Xinghunm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS与JS对DOM的阻塞行为</title>
    <link href="http://yoursite.com/2019/03/05/30.CSS%E4%B8%8EJS%E5%AF%B9DOM%E7%9A%84%E9%98%BB%E5%A1%9E%E8%A1%8C%E4%B8%BA/"/>
    <id>http://yoursite.com/2019/03/05/30.CSS与JS对DOM的阻塞行为/</id>
    <published>2019-03-05T10:10:20.000Z</published>
    <updated>2019-05-30T05:49:05.667Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="Html" scheme="http://yoursite.com/categories/Html/"/>
    
    
      <category term="Html" scheme="http://yoursite.com/tags/Html/"/>
    
  </entry>
  
  <entry>
    <title>离线缓存</title>
    <link href="http://yoursite.com/2018/09/08/26.%E7%A6%BB%E7%BA%BF%E7%BC%93%E5%AD%98/"/>
    <id>http://yoursite.com/2018/09/08/26.离线缓存/</id>
    <published>2018-09-08T10:10:20.000Z</published>
    <updated>2019-05-23T01:55:28.060Z</updated>
    
    <summary type="html">
    
      某些时候，我们希望能够离线访问网站，比如在飞机上、网络不稳定的火车上，这个时候，离线缓存技术就能派上用场了。
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>nginx基本配置及常用命令</title>
    <link href="http://yoursite.com/2017/10/11/10.nginx%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/10/11/10.nginx基本配置及常用命令/</id>
    <published>2017-10-11T10:10:20.000Z</published>
    <updated>2019-01-07T06:52:28.300Z</updated>
    
    <summary type="html">
    
      最近自己搭建了一个网站，并准备用nginx作为服务器，于是搜索了nginx的配置。nginx可配置项很多，由于该网站只是个人使用，只是简单进行了配置，在这里作一个记录。
    
    </summary>
    
      <category term="server" scheme="http://yoursite.com/categories/server/"/>
    
    
      <category term="server" scheme="http://yoursite.com/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>认识vertical-align</title>
    <link href="http://yoursite.com/2017/08/03/23.%E8%AE%A4%E8%AF%86vertical-align/"/>
    <id>http://yoursite.com/2017/08/03/23.认识vertical-align/</id>
    <published>2017-08-03T10:10:20.000Z</published>
    <updated>2019-03-18T09:25:17.198Z</updated>
    
    <summary type="html">
    
      vertical-align用来对其元素，平时用得不是太多，但当用到的时候，你会发现和自己的想法大相径庭，有可能设置行内某个元素的对齐方式，结果却改变了其他元素，想要垂直居中对齐，也不能达到预期效果，如此种种，值得去探究一下vertical-align。
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>树的深度遍历与广度遍历</title>
    <link href="http://yoursite.com/2017/06/27/15.%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E9%81%8D%E5%8E%86%E4%B8%8E%E5%B9%BF%E5%BA%A6%E9%81%8D%E5%8E%86/"/>
    <id>http://yoursite.com/2017/06/27/15.树的深度遍历与广度遍历/</id>
    <published>2017-06-26T18:11:08.000Z</published>
    <updated>2019-03-19T02:16:12.941Z</updated>
    
    <summary type="html">
    
      作为一个非科班出生的前端开发人员，平时对数据结构与算法了解得相对较少，当谈到深度遍历与广度遍历时就一脸懵逼，于是查阅相关资料，希望对其有一个基本认识，并能够实现深度、广度遍历的方法。
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>伪类与伪元素的区别</title>
    <link href="http://yoursite.com/2017/06/20/5.%E4%BC%AA%E7%B1%BB%E4%B8%8E%E4%BC%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2017/06/20/5.伪类与伪元素的区别/</id>
    <published>2017-06-20T12:10:07.000Z</published>
    <updated>2019-04-09T10:04:20.688Z</updated>
    
    <summary type="html">
    
      伪类与伪元素，一直傻傻分不清楚。
    
    </summary>
    
      <category term="html" scheme="http://yoursite.com/categories/html/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>React最佳实践</title>
    <link href="http://yoursite.com/2017/06/20/3.react%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2017/06/20/3.react最佳实践/</id>
    <published>2017-06-20T12:10:07.000Z</published>
    <updated>2019-04-08T11:32:40.066Z</updated>
    
    <summary type="html">
    
      在React应用的开发中遵循一定的基本准则，能使代码更加友好，提高代码质量。
    
    </summary>
    
      <category term="react" scheme="http://yoursite.com/categories/react/"/>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>前端同学应该知道的网站</title>
    <link href="http://yoursite.com/2017/05/03/21.%E5%89%8D%E7%AB%AF%E5%90%8C%E5%AD%A6%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2017/05/03/21.前端同学应该知道的网站/</id>
    <published>2017-05-03T10:10:20.000Z</published>
    <updated>2019-06-05T06:19:21.153Z</updated>
    
    <summary type="html">
    
      在日常的积累中，总是有一些网站或者文章是值得我们记住和研读的。通常我都是加入书签，随着时间的推移，书签就变得有些混乱，为了能更方便的去查询一些经典的站点，在这里把自己用过的，认为比较不错的网站和文章作一个记录。
    
    </summary>
    
      <category term="website" scheme="http://yoursite.com/categories/website/"/>
    
    
      <category term="website" scheme="http://yoursite.com/tags/website/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript中的值传递、引用传递及深浅拷贝</title>
    <link href="http://yoursite.com/2017/05/01/14.JavaScript%E4%B8%AD%E7%9A%84%E5%80%BC%E4%BC%A0%E9%80%92%E3%80%81%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E5%8F%8A%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D/"/>
    <id>http://yoursite.com/2017/05/01/14.JavaScript中的值传递、引用传递及深浅拷贝/</id>
    <published>2017-05-01T10:10:20.000Z</published>
    <updated>2019-01-11T07:05:53.534Z</updated>
    
    <summary type="html">
    
      在JavaScript编程中经常会遇到改变了一个变量另一个变量情况，即使传给函数的参数的改变都可能导致原值被改变，这和其他某些语言并不太一样，值得去探究一下。
    
    </summary>
    
      <category term="JS" scheme="http://yoursite.com/categories/JS/"/>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>变量对象与作用域链</title>
    <link href="http://yoursite.com/2017/04/05/25.%E5%8F%98%E9%87%8F%E5%AF%B9%E8%B1%A1%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/"/>
    <id>http://yoursite.com/2017/04/05/25.变量对象与作用域链/</id>
    <published>2017-04-05T10:10:20.000Z</published>
    <updated>2019-05-24T09:14:20.576Z</updated>
    
    <summary type="html">
    
      通常，我们在函数内部使用函数外部的变量时会很自然，并没有想过为什么能够直接使用函数外部的变量而在函数外部却不能直接使用函数内部的变量，一切都显得理所当然。佛曰，凡事必有因，这个因就是作用域链。
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JS执行环境</title>
    <link href="http://yoursite.com/2017/04/03/24.JS%20%E6%89%A7%E8%A1%8C%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
    <id>http://yoursite.com/2017/04/03/24.JS 执行上下文/</id>
    <published>2017-04-03T10:10:20.000Z</published>
    <updated>2019-04-18T01:54:54.593Z</updated>
    
    <summary type="html">
    
      执行上下文，即context，也不知道是谁翻译的，不少的文献、书籍用的都是这个词。还记得第一次接触这个词时的惆怅、迷惘、不知所措，扶了扶眼镜，翻开大辞典，还是翻译成环境比较接地气。JS执行上下文，即JS的执行环境。
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>css权重</title>
    <link href="http://yoursite.com/2017/04/03/22.css%E6%9D%83%E9%87%8D/"/>
    <id>http://yoursite.com/2017/04/03/22.css权重/</id>
    <published>2017-04-03T10:10:20.000Z</published>
    <updated>2019-04-01T06:56:23.440Z</updated>
    
    <summary type="html">
    
      通常，在我们的布局中，css每条规则的权重是导致应用在元素上的css没有生效的主要原因。为此，我们需要了解浏览器是如何利用权重进行解析的。
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://yoursite.com/2017/02/25/6.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2017/02/25/6.正则表达式/</id>
    <published>2017-02-25T12:10:00.000Z</published>
    <updated>2019-06-12T02:49:28.898Z</updated>
    
    <summary type="html">
    
      正则表达式，对于前端同学的我来说用得不多，也就一直没去研究，当需要写正则时候就是一头雾水，包括配置webpack,jest等。于是在这里整理了一些JavaScritpt正则相关的内容，以此对正则表达式有一个基本的认识并能够运用正则处理日常需求。
    
    </summary>
    
      <category term="JS" scheme="http://yoursite.com/categories/JS/"/>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>JS中的继承与原型链</title>
    <link href="http://yoursite.com/2017/02/01/16.JS%E4%B8%AD%E7%9A%84%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    <id>http://yoursite.com/2017/02/01/16.JS中的继承与原型链/</id>
    <published>2017-02-01T10:10:20.000Z</published>
    <updated>2019-06-05T01:58:43.441Z</updated>
    
    <summary type="html">
    
      在面向对象编程中，类之间的共享是通过继承实现的，而在JavaScript中万物皆对象，并没有类的概念(ES6中类仅仅是一个语法糖)，对象之间的共享是通过一个叫做原型的东西实现的。
    
    </summary>
    
      <category term="JS" scheme="http://yoursite.com/categories/JS/"/>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>每日一题</title>
    <link href="http://yoursite.com/2017/01/04/1.%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    <id>http://yoursite.com/2017/01/04/1.每日一题/</id>
    <published>2017-01-04T13:36:05.000Z</published>
    <updated>2019-06-13T06:55:07.575Z</updated>
    
    <summary type="html">
    
      前端题集
    
    </summary>
    
      <category term="subject" scheme="http://yoursite.com/categories/subject/"/>
    
    
      <category term="subject" scheme="http://yoursite.com/tags/subject/"/>
    
  </entry>
  
  <entry>
    <title>css居中方法</title>
    <link href="http://yoursite.com/2016/10/10/11.css%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2016/10/10/11.css居中方法/</id>
    <published>2016-10-10T10:10:20.000Z</published>
    <updated>2019-03-26T06:59:37.108Z</updated>
    
    <summary type="html">
    
      居中布局是前端布局当中很常见的一种设计，该如何实现呢？相信大多数同学都能说出几种，当然总有你还不知道的方法，于是查漏补缺对对常用的css居中的常用方法作一个总结。
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Jascript中的call、apply、bind</title>
    <link href="http://yoursite.com/2016/09/04/27.Jascript%E4%B8%AD%E7%9A%84call%E3%80%81apply%E3%80%81bind/"/>
    <id>http://yoursite.com/2016/09/04/27.Jascript中的call、apply、bind/</id>
    <published>2016-09-04T10:10:20.000Z</published>
    <updated>2019-04-11T02:40:08.998Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Git submodule的使用</title>
    <link href="http://yoursite.com/2016/07/24/19.git%20submodule%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/07/24/19.git submodule的使用/</id>
    <published>2016-07-24T15:30:09.000Z</published>
    <updated>2019-04-03T05:28:59.365Z</updated>
    
    <summary type="html">
    
      最近在做一个上传的客户端，上传的部分由后端同学以SDK的方式提供，因此该SDK是在一个独立的仓库，那么对于客户端该如何方便的集成该SDK呢？这就可以考虑用git的submodule。
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://yoursite.com/2016/06/24/2.git%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2016/06/24/2.git的常用命令简介/</id>
    <published>2016-06-24T15:30:09.000Z</published>
    <updated>2019-05-30T05:49:05.685Z</updated>
    
    <summary type="html">
    
      Git作为一种流行的版本管理系统已经广泛应用于我们的日常开发中，它的命令很多，为了减少后续查询的时间，在这里记录下一些常见的命令。
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>JS常用方法</title>
    <link href="http://yoursite.com/2016/06/05/4.JS%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2016/06/05/4.JS常用方法/</id>
    <published>2016-06-05T10:10:20.000Z</published>
    <updated>2019-06-10T03:29:35.795Z</updated>
    
    <summary type="html">
    
      js中方法很多，在这里记录下自己容易忘记的一些较为重要的方法和技巧
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
</feed>
